import javax.swing.*;
import java.awt.*;
import java.util.ArrayList;
import java.util.List;

public class BottomPanel extends JPanel {
    private Font font;
    private float fontScale;
    private JLabel timerLabel;
    private JLabel messageLabel;

    private List<JLabel> hearts;


    public BottomPanel(Font font,float fontScale, Runnable goBack, int health) {
        super(new GridLayout(2,4));
        this.font = font;
        this.fontScale = fontScale;

        timerLabel = timer();
        messageLabel = message();
        add(messageLabel);
        add(timerLabel);
        var button = backButton(goBack);
        var exitButton = exitButton();
        setBackground(new Color(54, 2, 54));
        add(button);
        add(exitButton);
        System.out.println("bottom panel() -> health: " + health);
        hearts = new ArrayList<>();
        for(int i = 0; i < health; i++){
            var heartLabel = new JLabel();
//            heart texture was generated by DALL-E model
            var heartIcon = new ImageIcon("resources/textures/heart.png");
            heartLabel.setIcon(heartIcon);
            hearts.add(heartLabel);
            add(heartLabel);
        }
    }

    public void removeHeart(){
        hearts.get(hearts.size() - 1).setIcon(null);
        hearts.remove(hearts.size() - 1);
        repaint();
    }

    public void setMessage(String message){
        var messageTimeThread = new Thread(() -> {
            try{
                Thread.sleep(7000);
                messageLabel.setText("");
                messageLabel.revalidate();
            } catch (InterruptedException ex){
                System.out.println("message time thread was interrupted - " + ex.getMessage());
            }
        });

        messageLabel.setText(message);
        messageLabel.revalidate();
        messageTimeThread.start();
    }


    private JButton exitButton(){
        var button = new JButton("Exit");
        button.setBackground(Color.BLACK);
        button.addActionListener(e -> {
            System.exit(0);
        });

        return button;
    }

    private JLabel timer(){
        JLabel timer = new JLabel("Time: 0:0");
        timer.setFont(font.deriveFont(16f * fontScale));
        timer.setForeground(Color.YELLOW);

        var timerThread = new Thread(() -> {
            int secsCounter = 0;
            while(true){
                try{
                    Thread.sleep(1000);
                    secsCounter++;
                    timerLabel.setText("Time: " + secsCounter/60 + ":" + secsCounter%60);
                    timerLabel.revalidate();
                } catch (InterruptedException ex){
                    System.out.println("An interrupted exception occurred - " + ex.getMessage());
                }
            }
        });
        timerThread.start();
        return timer;
    }

    private JLabel message(){
        JLabel message = new JLabel("");
        message.setFont(font.deriveFont(16f * fontScale));
        message.setForeground(new Color(255, 0, 255));
        return message;
    }

    private JButton backButton(Runnable goBack){
        var button = new JButton("Back");
        button.setBackground(Color.BLACK);
        button.addActionListener(e -> {
            goBack.run();
        });

        return button;
    }
}
